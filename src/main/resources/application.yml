server:
  port: 8090
  servlet:
    context-path: /api  # 全局API前缀
  # 启用压缩 - 优先使用Brotli
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml+rss,application/atom+xml,image/svg+xml,font/woff,font/woff2,application/font-woff,application/font-woff2
    min-response-size: 512 # 降低压缩阈值
    # 启用Brotli压缩
    brotli:
      enabled: true
      quality: 11 # 最高压缩质量
    # Gzip作为备选
    gzip:
      enabled: true
      level: 9 # 最高压缩级别
  # 性能优化
  tomcat:
    threads:
      max: 200
      min-spare: 10
    max-connections: 8192
    accept-count: 100
    # 启用HTTP/2
    http2:
      enabled: true
    # 优化缓冲区
    max-http-form-post-size: 2MB
    max-swallow-size: 2MB
  # 静态资源缓存 - 更激进的缓存策略
  static:
    cache:
      enabled: true
      max-age: 31536000 # 1年
      # 启用条件请求
      etag: true
      # 启用Last-Modified
      last-modified: true

spring:
  profiles:
    active: dev  # 默认激活dev配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # Druid 连接池配置优化
    druid:
      initial-size: 5              # 初始连接数
      min-idle: 5                  # 最小空闲连接数
      max-active: 20               # 最大活跃连接数
      max-wait: 60000              # 获取连接最大等待时间(60秒)≠
      time-between-eviction-runs-millis: 60000    # 检测空闲连接的间隔(60秒)
      min-evictable-idle-time-millis: 300000      # 空闲连接最小生存时间(5分钟)
      validation-query: SELECT 1 FROM DUAL        # 验证连接有效性的SQL
      test-while-idle: true        # 空闲时验证连接
      test-on-borrow: false        # 获取连接时不验证(提高性能)
      test-on-return: false        # 归还连接时不验证(提高性能)
      pool-prepared-statements: true              # 开启预编译语句池
      max-pool-prepared-statement-per-connection-size: 20  # 每个连接的预编译语句数量
      filters: stat,wall,slf4j     # 开启监控统计、防火墙、日志功能
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 监控配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: admin
        login-password: admin123

  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 10MB
      file-size-threshold: 2KB
    session:
      timeout: 30m  # 会话超时时间30分钟
      cookie:
        http-only: true
        secure: false  # 开发环境设为false，生产环境应设为true
        max-age: 1800  # cookie最大存活时间30分钟
        same-site: lax

  ai:
    dashscope:
      api-key: "placeholder_dashscope_key"
  
  # 缓存配置
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 默认1小时
      cache-null-values: true # 允许缓存null值
      key-prefix: "hive::" # 缓存键前缀
      use-key-prefix: true # 使用键前缀

  # Redisson 配置
  redis:
    redisson:
      config: |
        singleServerConfig:
          address: "redis://localhost:6379"
          password: null
          database: 0
          connectionPoolSize: 64
          connectionMinimumIdleSize: 10
          idleConnectionTimeout: 10000
          connectTimeout: 10000
          timeout: 3000
          retryAttempts: 3
          retryInterval: 1500
          keepAlive: true
          tcpNoDelay: true
        lockWatchdogTimeout: 30000
        threads: 16
        nettyThreads: 32


# 应用配置
app:
  session:
    timeout: 1800  # 30分钟，单位：秒


mybatis-plus:
  type-aliases-package: com.lumibee.hive.entity
  global-config:
    db-config:
      id-type: assign_id # 全局主键策略
      logic-delete-field: deleted # 全局逻辑删除字段名
      logic-delete-value: 1 # 全局逻辑删除值
      logic-not-delete-value: 0 # 全局逻辑未删除值
    banner: false
  configuration:
    map-underscore-to-camel-case: true # 开启驼峰命名转换

# 文件存储配置
file:
  upload:
    dir: ./uploads  # 文件上传目录 - 项目目录下
  base:
    url: http://localhost:8090/uploads/  # 访问URL前缀 - 包含完整后端地址

# 头像配置
avatar:
  max:
    size: 2097152   # 头像最大大小 (2MB)
  allowed:
    extensions: jpg,jpeg,png,gif  # 允许的文件类型


# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,beans,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 60s
    tags:
      application: hive
      environment: ${spring.profiles.active:dev}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        jdbc.connections.active: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
    caches:
      enabled: true

# 日志配置
logging:
  level:
    com.lumibee.hive: INFO
    org.springframework.security: WARN
    com.alibaba.druid: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: logs/hive.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30

qweather:
  api:
    key: "placeholder_weather_key"
    weather-base-url: "https://devapi.qweather.com/v7/weather"
    geo-base-url: "https://geoapi.qweather.com/v2/city"

search-api:
  api-key: "placeholder_search_key"

# Swagger/OpenAPI 配置
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    enabled: true
  packages-to-scan: com.lumibee.hive.controller
  default-produces-media-type: application/json
  default-consumes-media-type: application/json


