version: '3.8'

services:
  # 1. MySQL 数据库服务
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: community
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql # 将数据持久化到 volume
    networks:
      - hive-net
    healthcheck:
      test: ["CMD-SHELL", "mysql -h localhost -u root -p${DB_PASSWORD} -e 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # 2. Redis 缓存服务
  redis-cache:
    image: redis:6.2-alpine
    container_name: redis-cache
    restart: always
    command: redis-server --appendonly yes # 启用持久化
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hive-net

  # 3. Elasticsearch 搜索服务 (带 IK 插件)
  elasticsearch-search:
    build: ./elasticsearch # 使用我们第二步创建的 Dockerfile 来构建
    container_name: elasticsearch-search
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # 开发环境禁用安全特性，简化配置
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m" # 设置JVM内存
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - hive-net

  # 4. Spring Boot 应用服务
  hive-app:
    build: . # 使用第一步创建的 Dockerfile 来构建
    container_name: hive-app
    restart: always
    depends_on: # 确保在依赖服务启动后再启动
      mysql-db:
        condition: service_healthy
      redis-cache:
          condition: service_started
      elasticsearch-search:
          condition: service_started
    ports:
      - "8090:8090"
    env_file:
      - ./config/prod.env # 加载环境变量文件
    networks:
      - hive-net

# 定义数据卷，用于持久化存储
volumes:
  mysql-data:
  redis-data:
  es-data:

# 定义网络，让所有服务都在同一个网络中，可以通过服务名互相访问
networks:
  hive-net:
    driver: bridge